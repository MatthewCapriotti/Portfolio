{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","character","characters","filter","i","className","ReactDOM","render","document","getElementById"],"mappings":"gOAEMA,EAAc,WAChB,OACE,gCACE,+BACE,sCACA,qCACA,8CAKJC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACA,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJOA,MAUf,OAAO,gCAAQJ,KAcNS,EAXC,SAACV,GAAW,IACjBE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBAEtB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCYnDE,E,4MA5CbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACFA,EAAMC,OAArBV,EADiB,EACjBA,KAAMW,EADW,EACXA,MAEb,EAAKC,SAAL,eACGZ,EAAOW,K,EAGZE,WAAa,WACX,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGX,IAAD,EACeS,KAAKR,MAAnBP,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACI,iCACI,uBAAOe,QAAQ,OAAf,kBACA,uBACAC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eACf,uBAAOQ,QAAQ,MAAf,iBACA,uBACAC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eACf,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GAvC3CO,aCmCJC,E,4MA9BXP,aAAe,SAACQ,GAEd,EAAKV,SAAS,CAACW,WAAW,GAAD,mBAAM,EAAKhB,MAAMgB,YAAjB,CAA6BD,O,EAExDnB,gBAAkB,SAACJ,GAAW,IACnBwB,EAAc,EAAKhB,MAAnBgB,WAEP,EAAKX,SAAS,CACZW,WAAYA,EAAWC,QAAO,SAACF,EAAWG,GACxC,OAAOA,IAAM1B,Q,EAInBQ,MAAQ,CACNgB,WAAY,I,uDAGR,IAEEA,EAAeR,KAAKR,MAApBgB,WAEV,OACE,sBAAKG,UAAU,YAAf,UACE,cAAC,EAAD,CAAO9B,cAAe2B,EAAYpB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAOW,aAAcC,KAAKD,sB,GAzBhBM,aCAlBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d9b62a51.chunk.js","sourcesContent":["import React from 'react'\n\nconst TableHeader = () => {\n    return (\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Job</th>\n          <th>Remove</th>\n        </tr>\n      </thead>\n    )\n}\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n            <td>{row.name}</td>\n            <td>{row.job}</td>\n            <td>\n              <button onClick={() => props.removeCharacter(index)}>Delete</button>\n            </td>\n          </tr>\n        )\n      })\n    \n      return <tbody>{rows}</tbody>\n  }\n\n  const Table = (props) => {\n    const {characterData, removeCharacter} = props\n  \n    return (\n      <table>\n        <TableHeader />\n        <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n      </table>\n    )\n  }\n\nexport default Table","import React, {Component} from 'react'\n\nclass Form extends Component {\n  initialState = {\n    name: '',\n    job: '',\n  }\n\n  state = this.initialState\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n  \n    this.setState({\n      [name]: value,\n    })\n  }\n  submitForm = () => {\n    this.props.handleSubmit(this.state)\n    this.setState(this.initialState)\n  }\n\n  render() {\n    const { name, job } = this.state;\n  \n    return (\n        <form>\n            <label htmlFor=\"name\">Name</label>\n            <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={name}\n            onChange={this.handleChange} />\n            <label htmlFor=\"job\">Job</label>\n            <input\n            type=\"text\"\n            name=\"job\"\n            id=\"job\"\n            value={job}\n            onChange={this.handleChange} />\n            <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n        </form>\n    );\n    }\n}\n  \nexport default Form;","import React, {Component} from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\n\n\nclass App extends Component {\n    handleSubmit = (character) => {\n        \n      this.setState({characters: [...this.state.characters, character]})\n    }\n    removeCharacter = (index) => {\n        const {characters} = this.state\n      \n        this.setState({\n          characters: characters.filter((character, i) => {\n            return i !== index\n          }),\n        })\n      }\n      state = {\n        characters: [ ]\n      }\n\n  render() {\n    \n      const { characters } = this.state\n    \n    return (\n      <div className=\"container\">\n        <Table characterData={characters} removeCharacter={this.removeCharacter}/>\n        <Form  handleSubmit={this.handleSubmit}/>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}